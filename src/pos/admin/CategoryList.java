/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pos.admin;

import java.util.List;
import javax.swing.table.DefaultTableModel;
import pos.Home;
import pos.ImageRenderer;
import pos.MainWindow;
import pos.products.Category;

/**
 *
 * @author sander
 */
public class CategoryList extends javax.swing.JPanel {

    private final MainWindow mainWindow;

    /**
     * Creates new form CategoryList
     * @param mainWindow
     */
    public CategoryList(MainWindow mainWindow) {
        this.mainWindow = mainWindow;
        initComponents();
        addCategories();
    }

    private void addCategories() {
        List<Category> categories = Category.findAll(mainWindow.getDbManager());
        DefaultTableModel model = (DefaultTableModel) categoryTable.getModel();
        for (Category category : categories) {
            model.addRow(new Object[]{category.getId(), category.getName(),
                category.getImageIcon()});
        }
    }
    
    public ImageRenderer getImageRenderer(){
        return new ImageRenderer();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        categoryTable = new javax.swing.JTable();
        addCategoryBtn = new javax.swing.JButton();
        removeCategoryBtn = new javax.swing.JButton();
        editCategoryBtn = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        categoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Image"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(categoryTable);
        if (categoryTable.getColumnModel().getColumnCount() > 0) {
            categoryTable.getColumnModel().getColumn(2).setCellRenderer(getImageRenderer());
        }

        addCategoryBtn.setText("Add Category ...");
        addCategoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCategoryBtnActionPerformed(evt);
            }
        });

        removeCategoryBtn.setText("Remove Category ...");
        removeCategoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeCategoryBtnActionPerformed(evt);
            }
        });

        editCategoryBtn.setText("Edit Category ...");
        editCategoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCategoryBtnActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(backButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 179, Short.MAX_VALUE)
                .addComponent(editCategoryBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(removeCategoryBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCategoryBtn)
                .addGap(42, 42, 42))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCategoryBtn)
                    .addComponent(removeCategoryBtn)
                    .addComponent(editCategoryBtn)
                    .addComponent(backButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void removeCategoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeCategoryBtnActionPerformed
        int[] rows = categoryTable.getSelectedRows();
        boolean[] rowsToRemoveFromList = new boolean[rows.length];
        for (int rowNum = 0; rowNum < rows.length; rowNum++) {
            Object toRemoveId = categoryTable.getValueAt(rowNum, 0);
            rowsToRemoveFromList[rowNum] = Category.remove(mainWindow.getDbManager(), toRemoveId);
        }
        //remove listed as true
        for (int i = rowsToRemoveFromList.length - 1; i >= 0; i--) {
            if (rowsToRemoveFromList[i]) {
                ((DefaultTableModel) categoryTable.getModel()).removeRow(rows[i]);
            }
        }
    }//GEN-LAST:event_removeCategoryBtnActionPerformed

    private void addCategoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCategoryBtnActionPerformed
        //mainWindow.showPanel(new AddCategory(mainWindow));
        mainWindow.showPanel(new AddCategory(mainWindow));
    }//GEN-LAST:event_addCategoryBtnActionPerformed

    private void editCategoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editCategoryBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editCategoryBtnActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        mainWindow.showPanel(new Home(mainWindow));
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCategoryBtn;
    private javax.swing.JButton backButton;
    private javax.swing.JTable categoryTable;
    private javax.swing.JButton editCategoryBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton removeCategoryBtn;
    // End of variables declaration//GEN-END:variables
}
